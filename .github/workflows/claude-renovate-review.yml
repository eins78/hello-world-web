name: Claude Renovate Review

# This workflow reviews Renovate PRs with dynamic CI waiting (Claude-managed).
# It follows RENOVATE_PR_COMMENTS.md guidelines (≤3 lines, ≤200 chars).
# Security: Read-only, concise output enforced.

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  renovate-review:
    # Only run on Renovate PRs
    if: |
      github.event.pull_request.user.login == 'app/renovate' ||
      github.event.pull_request.user.login == 'renovate[bot]'

    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write
      issues: read
      id-token: write
      actions: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 1

      - name: Run Claude Code Review (Renovate Mode)
        id: claude-review
        uses: anthropics/claude-code-action@f8749bd14b87cec4372f05f03ef45d57f3d0db7a
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          prompt: |
            REPO: ${{ github.repository }}
            PR NUMBER: ${{ github.event.pull_request.number }}
            AUTHOR: ${{ github.event.pull_request.user.login }}

            This is a Renovate automated dependency update PR.

            **CRITICAL: You MUST follow docs/RENOVATE_PR_COMMENTS.md guidelines:**
            - Read docs/RENOVATE_PR_COMMENTS.md IMMEDIATELY
            - For CI GREEN: Maximum 3 lines, 200 characters
            - For CI FAILED: Use expanded diagnostic format with error logs and fix guidance
            - Default response when green: "✅ CI green." (if no issues)
            - Use format: [emoji] [one-line summary]

            **STEP 1: Wait for CI checks to complete (max 30 minutes)**

            Implement this wait loop:
            1. Run: `gh pr view ${{ github.event.pull_request.number }} --json statusCheckRollup`
            2. Parse the JSON output
            3. Count checks by status: COMPLETED, IN_PROGRESS, PENDING
            4. Exclude this workflow (renovate-review) and claude-review from wait checks
            5. If ALL other checks are COMPLETED → proceed to STEP 2
            6. If not complete:
               - Run: `sleep 30` (wait 30 seconds)
               - Increment counter
               - Repeat from step 1
            7. Maximum: 60 iterations (30 minutes total)
            8. After 30 min OR when complete → proceed to STEP 2

            **STEP 2: Review with CI results**

            Check CI results:
            - If all passed: "✅ CI green." (1 line)
            - If timeout: "⏳ CI incomplete after 30 min"
            - If ANY check failed: Follow CI failure diagnostic process below

            **STEP 3: If CI failed, provide diagnostics**

            When CI fails, provide expanded diagnostic information:
            1. Get failed run ID: `gh run list --branch {branch-name} --limit 5`
            2. Check logs: `gh run view {run-id} --log-failed`
            3. Review diff: `gh pr diff ${{ github.event.pull_request.number }}`
            4. Post diagnostic comment with:
               - Which check failed
               - 5-10 lines of relevant error output
               - Analysis of likely cause
               - Suggested fix steps

            See docs/RENOVATE_PR_COMMENTS.md ci_failure_handling section for format.

            Then comment using `gh pr comment`.
            Remember: CI failure comments are NOT subject to 3-line/200-char limits.

          claude_args: '--allowed-tools "Bash(gh issue view:*),Bash(gh search:*),Bash(gh issue list:*),Bash(gh pr comment:*),Bash(gh pr diff:*),Bash(gh pr view:*),Bash(gh pr list:*),Bash(gh run view:*),Bash(gh run list:*),Bash(sleep *)"'